// import * as FileSystem from "expo-file-system";
// import * as SQLite from "expo-sqlite";

// export const resetDatabase = async () => {
//   try {
//     console.log("üîÑ Resetting local database...");

//     // Try to close existing database connection
//     try {
//       const db = SQLite.openDatabaseSync("learn_trading_app.db");
//       db.closeSync();
//       console.log("‚úÖ Closed existing database connection");
//     } catch (closeError) {
//       console.log("‚ÑπÔ∏è No existing database connection to close");
//     }

//     // Delete the database file
//     const dbPath = `${FileSystem.documentDirectory}SQLite/learn_trading_app.db`;
//     const exists = await FileSystem.getInfoAsync(dbPath);

//     if (exists.exists) {
//       try {
//         await FileSystem.deleteAsync(dbPath);
//         console.log("‚úÖ Database file deleted");
//       } catch (deleteError) {
//         console.warn(
//           "‚ö†Ô∏è Could not delete database file (may be readonly):",
//           deleteError
//         );
//         console.log("‚ÑπÔ∏è This is normal in some development environments");
//       }
//     } else {
//       console.log("‚ÑπÔ∏è Database file not found, will be created fresh");
//     }

//     // Wait a moment for file system to update
//     await new Promise((resolve) => setTimeout(resolve, 100));

//     // Reopen database to trigger recreation with correct schema
//     try {
//       const newDb = SQLite.openDatabaseSync("learn_trading_app.db");
//       newDb.closeSync();
//       console.log(
//         "‚úÖ Database reset complete - new schema will be applied on next app start"
//       );
//     } catch (openError) {
//       console.log("‚ö†Ô∏è Could not reopen database immediately");

//       // Check if it's a readonly database error
//       if (
//         openError instanceof Error &&
//         openError.message.includes("readonly database")
//       ) {
//         console.log("‚ÑπÔ∏è Database is readonly (normal in Expo Go)");
//         console.log(
//           "‚ÑπÔ∏è Database will be created with correct schema on next app start"
//         );
//         console.log("‚ÑπÔ∏è For persistent local storage, use a development build");
//       } else {
//         console.log(
//           "‚ÑπÔ∏è Database will be created with correct schema on next app start"
//         );
//       }
//     }
//   } catch (error) {
//     console.error("‚ùå Error resetting database:", error);

//     // Check if it's a readonly database error
//     if (error instanceof Error && error.message.includes("readonly database")) {
//       console.log(
//         "‚ÑπÔ∏è Database is readonly - this is expected in some environments"
//       );
//       console.log("‚ÑπÔ∏è App will continue with cloud-only storage");
//     } else {
//       console.log("‚ÑπÔ∏è Database reset failed, but app will continue");
//     }
//   }
// };
